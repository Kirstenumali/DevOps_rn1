# References:
# 1. https://github.com/amigo-nishant?tab=repositories  # All main repositories for some commands are here; you can check 
# 2. https://www.youtube.com/watch?v=wn8YKjrbCEM&t=334s
# 3. https://www.devops-playbook.com/post/understanding-docker-and-containers     #  same as m1 in GitHub yesterday read first)
# 4. https://www.youtube.com/watch?v=V9ppLv71DMI&list=PL2mVe-Z-lAXMUwv-fhbBOCtpJA_nk-OeK playlist  # of this DevopsBootcap m02 
# 5. https://docs.docker.com/get-started/docker_cheatsheet.pdf # The PowerShell commands from Docker
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=
To-do now:
  1. Docker Desktop and Windows PowerShell is a must as a tab. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Deployment: 
  1. First, open the Docker Desktop (dd).  # Docker Desktop and Windows Power Shell is a must as a tab  
  2. Down part of the Docker Desktop images, there is a "What is a container?" # You can be on any folder as well. However, using the PowerShell/terminal is required for this. It will load out in the learning center, and then it will show "Status: Downloaded newer image for docker"  
  3. (PS: docker ps -a) Created 1 Docker Desktop container # Moreover, 4. Docker Architecture  in this link https://www.devops-playbook.com/post/understanding-docker-and-containers
  4. (PS: docker rm <container_name>) Then, delete the container # probably identify the "error" that was shown 
                                                                                              "Done!"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PowerShell commands to use (copy and paste is a must here & Requirements of Real-time commands):
  1) docker ps -a # checks the Container ID, Image, Command, Created, Status, Ports, and Names 
  2) docker rm <container_name> # Remove a stopped container
  3) docker ps # checks the Container ID, Image, Command, Created, Status, Ports, and Names 
  4) docker images # It will show the Repository, Tag, Image, Id, Created & Size
  5) docker rm # rm means to remove 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Description & Notes: 
# 1. What is a VM(Virtual Machine)?
#       A VM is a virtualized instance of a computer that can perform almost all of 
#    the same functions as a computer, including running applications and operating systems. 
#    Virtual machines run on a physical machine and access computing resources from a hypervisor software.
# 2. What is Docker? 
#   Docker is a set of platform-as-a-service 
# products that use OS-level virtualization to deliver software in packages called containers. 
# The service has both free and premium tiers. The software that hosts the containers is called Docker Engine. 
# It was first released in 2013 and was developed by Docker, Inc.
# 3. What is the difference between Docker and VM?
#       A VM lets you run a virtual machine on any hardware. 
#    Docker enables you to run an application on any operating system. 
#    It uses isolated user-space instances known as containers. 
#    Docker containers have their own file system, dependency structure, processes, and network capabilities.

code -- github/bitbucket -- create repository (All the code) XYZ library 1.2.3 -- build (GCC, maven) -- binary 
DEV -- work --
QA -- work -- XYZ 1.2.2 -- it will not work
PRODUCTION
code -- GitHub/bitbucket -- create repository (All the code) XYZ library 1.2.3 + Dockerfile -- Dockercompose -- 
build (GCC, maven) -- binary
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
